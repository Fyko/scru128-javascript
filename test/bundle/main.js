(()=>{"use strict";var t={850:(t,e,r)=>{r.d(e,{Er:()=>h,_R:()=>u,oD:()=>a,rI:()=>m});const n=0xffffffffffff,o=16777215,s=16777215,i=[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,1,2,3,4,5,6,7,8,9,127,127,127,127,127,127,127,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,127,127,127,127,127,127,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,127,127,127,127,127];class a{constructor(t){if(this.bytes=t,16!==t.length)throw new TypeError("invalid length of byte array: "+t.length)}static ofInner(t){return new a(t)}static fromFields(t,e,r,i){if(!Number.isInteger(t)||!Number.isInteger(e)||!Number.isInteger(r)||!Number.isInteger(i)||t<0||e<0||r<0||i<0||t>n||e>o||r>s||i>4294967295)throw new RangeError("invalid field value");const u=new Uint8Array(16);return u[0]=t/1099511627776,u[1]=t/4294967296,u[2]=t>>>24,u[3]=t>>>16,u[4]=t>>>8,u[5]=t,u[6]=e>>>16,u[7]=e>>>8,u[8]=e,u[9]=r>>>16,u[10]=r>>>8,u[11]=r,u[12]=i>>>24,u[13]=i>>>16,u[14]=i>>>8,u[15]=i,new a(u)}get timestamp(){return this.subUint(0,6)}get counterHi(){return this.subUint(6,9)}get counterLo(){return this.subUint(9,12)}get entropy(){return this.subUint(12,16)}static fromString(t){var e;if(25!==t.length)throw new SyntaxError("invalid length: "+t.length);const r=new Uint8Array(25);for(let n=0;n<25;n++)r[n]=null!==(e=i[t.charCodeAt(n)])&&void 0!==e?e:127;return a.fromDigitValues(r)}static fromDigitValues(t){if(25!==t.length)throw new SyntaxError("invalid length: "+t.length);const e=new Uint8Array(16);let r=99;for(let n=-7;n<25;n+=8){let o=0;for(let e=n<0?0:n;e<n+8;e++){const r=t[e];if(r<0||r>35||!Number.isInteger(r))throw new SyntaxError("invalid digit");o=36*o+r}let s=e.length-1;for(;o>0||s>r;s--){if(s<0)throw new SyntaxError("out of 128-bit value range");o+=2821109907456*e[s];const t=Math.trunc(o/256);e[s]=255&o,o=t}r=s}return new a(e)}toString(){const t=new Uint8Array(25);let e=99;for(let r=-4;r<16;r+=5){let n=this.subUint(r<0?0:r,r+5),o=t.length-1;for(;n>0||o>e;o--){n+=1099511627776*t[o];const e=Math.trunc(n/36);t[o]=n-36*e,n=e}e=o}let r="";for(const e of t)r+="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(e);return r}static fromBytes(t){for(let e=0;e<t.length;e++){const r=t[e];if(r<0||r>255||!Number.isInteger(r))throw new SyntaxError("invalid byte value")}return 16===t.length?new a(Uint8Array.from(t)):a.fromDigitValues(Uint8Array.from(t,(t=>{var e;return null!==(e=i[t])&&void 0!==e?e:127})))}static fromArrayBuffer(t){if(16!==t.byteLength)throw new TypeError("invalid length of byte array: "+t.byteLength);return new a(new Uint8Array(t.slice(0)))}toArrayBuffer(){return this.bytes.buffer.slice(0)}static fromHex(t){const e=t.match(/^(?:0x)?0*(0|[1-9a-f][0-9a-f]*)$/i);if(null===e||e[1].length>32)throw new SyntaxError("invalid hexadecimal integer");const r=32-e[1].length,n=new Uint8Array(16);for(let t=0;t<16;t++){const o=2*t-r;n[t]=(o<0?0:i[e[1].charCodeAt(o)]<<4)|(o+1<0?0:i[e[1].charCodeAt(o+1)])}return new a(n)}toHex(){const t="0123456789abcdef";let e="0x";for(const r of this.bytes)e+=t.charAt(r>>>4),e+=t.charAt(15&r);return e}toJSON(){return this.toString()}clone(){return new a(this.bytes.slice(0))}equals(t){return 0===this.compareTo(t)}compareTo(t){for(let e=0;e<16;e++){const r=this.bytes[e]-t.bytes[e];if(0!==r)return Math.sign(r)}return 0}subUint(t,e){let r=0;for(;t<e;)r=256*r+this.bytes[t++];return r}}class u{constructor(t){this.timestamp=0,this.counterHi=0,this.counterLo=0,this.tsCounterHi=0,this.lastStatus="NOT_EXECUTED",this.rng=t||new l}generate(){return this.generateCore(Date.now())}generateNoRewind(){return this.generateCoreNoRewind(Date.now(),1e4)}generateCore(t){let e=this.generateCoreNoRewind(t,1e4);return void 0===e&&(this.timestamp=0,this.tsCounterHi=0,e=this.generateCoreNoRewind(t,1e4),this.lastStatus="CLOCK_ROLLBACK"),e}generateCoreNoRewind(t,e){if(!Number.isInteger(t)||t<1||t>n)throw new RangeError("`timestamp` must be a 48-bit positive integer");if(e<0||e>n)throw new RangeError("`rollbackAllowance` out of reasonable range");if(t>this.timestamp)this.timestamp=t,this.counterLo=this.rng.nextUint32()&s,this.lastStatus="NEW_TIMESTAMP";else{if(!(t+e>this.timestamp))return;this.counterLo++,this.lastStatus="COUNTER_LO_INC",this.counterLo>s&&(this.counterLo=0,this.counterHi++,this.lastStatus="COUNTER_HI_INC",this.counterHi>o&&(this.counterHi=0,this.timestamp++,this.counterLo=this.rng.nextUint32()&s,this.lastStatus="TIMESTAMP_INC"))}return(this.timestamp-this.tsCounterHi>=1e3||this.tsCounterHi<1)&&(this.tsCounterHi=this.timestamp,this.counterHi=this.rng.nextUint32()&o),a.fromFields(this.timestamp,this.counterHi,this.counterLo,this.rng.nextUint32())}getLastStatus(){return this.lastStatus}[Symbol.iterator](){return this}next(){return{value:this.generate(),done:!1}}}let c,f=t=>{if("undefined"!=typeof SCRU128_DENY_WEAK_RNG&&SCRU128_DENY_WEAK_RNG)throw new Error("no cryptographically strong RNG available");for(let e=0;e<t.length;e++)t[e]=65536*Math.trunc(65536*Math.random())+Math.trunc(65536*Math.random());return t};"undefined"!=typeof crypto&&crypto.getRandomValues&&(f=t=>crypto.getRandomValues(t));class l{constructor(){this.buffer=new Uint32Array(8),this.cursor=1/0}nextUint32(){return this.cursor>=this.buffer.length&&(f(this.buffer),this.cursor=0),this.buffer[this.cursor++]}}const m=()=>(c||(c=new u)).generate(),h=()=>m().toString()}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,r),s.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t=r(850);const e=(t,e="")=>{if(!t)throw new Error("Assertion failed"+(e?": "+e:""))};globalThis.SCRU128_DENY_WEAK_RNG=!0,describe("Scru128Generator",(function(){describe("#generateCore()",(function(){it("generates increasing IDs even with decreasing or constant timestamp",(function(){const r=1250999896491,n=new t._R;e("NOT_EXECUTED"===n.getLastStatus());let o=n.generateCore(r);e("NEW_TIMESTAMP"===n.getLastStatus()),e(o.timestamp===r);for(let t=0;t<1e5;t++){const s=n.generateCore(r-Math.min(9998,t));e("COUNTER_LO_INC"===n.getLastStatus()||"COUNTER_HI_INC"===n.getLastStatus()||"TIMESTAMP_INC"===n.getLastStatus()),e(o.compareTo(s)<0),o=s}e(o.timestamp>=r)})),it("breaks increasing order of IDs if timestamp moves backward a lot",(function(){const r=1250999896491,n=new t._R;e("NOT_EXECUTED"===n.getLastStatus());let o=n.generateCore(r);e("NEW_TIMESTAMP"===n.getLastStatus()),e(o.timestamp===r);let s=n.generateCore(r-1e4);e("CLOCK_ROLLBACK"===n.getLastStatus()),e(o.compareTo(s)>0),e(s.timestamp==r-1e4),o=s,s=n.generateCore(r-10001),e("COUNTER_LO_INC"===n.getLastStatus()||"COUNTER_HI_INC"===n.getLastStatus()||"TIMESTAMP_INC"===n.getLastStatus()),e(o.compareTo(s)<0)}))})),describe("#generateCoreNoRewind()",(function(){it("generates increasing IDs even with decreasing or constant timestamp",(function(){const r=1250999896491,n=new t._R;e("NOT_EXECUTED"===n.getLastStatus());let o=n.generateCoreNoRewind(r,1e4);e(void 0!==o),e("NEW_TIMESTAMP"===n.getLastStatus()),e(o.timestamp===r);for(let t=0;t<1e5;t++){const s=n.generateCoreNoRewind(r-Math.min(9998,t),1e4);e(void 0!==s),e("COUNTER_LO_INC"===n.getLastStatus()||"COUNTER_HI_INC"===n.getLastStatus()||"TIMESTAMP_INC"===n.getLastStatus()),e(o.compareTo(s)<0),o=s}e(o.timestamp>=r)})),it("returns undefined if timestamp moves backward a lot",(function(){const r=1250999896491,n=new t._R;e("NOT_EXECUTED"===n.getLastStatus());const o=n.generateCoreNoRewind(r,1e4);e(void 0!==o),e("NEW_TIMESTAMP"===n.getLastStatus()),e(o.timestamp===r);let s=n.generateCoreNoRewind(r-1e4,1e4);e(void 0===s),e("NEW_TIMESTAMP"===n.getLastStatus()),s=n.generateCoreNoRewind(r-10001,1e4),e(void 0===s),e("NEW_TIMESTAMP"===n.getLastStatus())}))})),it("is iterable with for-of loop",(function(){let r=0;for(const n of new t._R)if(e(n instanceof t.oD),r+=1,r>100)break;e(101===r)}))}))})(),(()=>{var t=r(850);const e=(t,e="")=>{if(!t)throw new Error("Assertion failed"+(e?": "+e:""))};globalThis.SCRU128_DENY_WEAK_RNG=!0,describe("Scru128Id",(function(){const r=2**48-1,n=2**24-1,o=2**32-1;it("encodes and decodes prepared cases correctly",(function(){const s=[[[0,0,0,0],"0000000000000000000000000"],[[r,0,0,0],"F5LXX1ZZ5K6TP71GEEH2DB7K0"],[[r,0,0,0],"f5lxx1zz5k6tp71geeh2db7k0"],[[0,n,0,0],"0000000005GV2R2KJWR7N8XS0"],[[0,n,0,0],"0000000005gv2r2kjwr7n8xs0"],[[0,0,n,0],"00000000000000JPIA7QL4HS0"],[[0,0,n,0],"00000000000000jpia7ql4hs0"],[[0,0,0,o],"0000000000000000001Z141Z3"],[[0,0,0,o],"0000000000000000001z141z3"],[[r,n,n,o],"F5LXX1ZZ5PNORYNQGLHZMSP33"],[[r,n,n,o],"f5lxx1zz5pnorynqglhzmsp33"]],i=["timestamp","counterHi","counterLo","entropy"];for(const r of s){const n=t.oD.fromFields(...r[0]),o=t.oD.fromString(r[1]);e(n.equals(o)),e(n.toString()===r[1].toUpperCase()),e(o.toString()===r[1].toUpperCase());for(let t=0;t<i.length;t++)e(n[i[t]]===r[0][t]),e(o[i[t]]===r[0][t])}})),it("throws error if an invalid string representation is supplied",(function(){const r=[""," 036Z8PUQ4TSXSIGK6O19Y164Q","036Z8PUQ54QNY1VQ3HCBRKWEB "," 036Z8PUQ54QNY1VQ3HELIVWAX ","+036Z8PUQ54QNY1VQ3HFCV3SS0","-036Z8PUQ54QNY1VQ3HHY8U1CH","+36Z8PUQ54QNY1VQ3HJQ48D9P","-36Z8PUQ5A7J0TI08OZ6ZDRDY","036Z8PUQ5A7J0T_08P2CDZ28V","036Z8PU-5A7J0TI08P3OL8OOL","036Z8PUQ5A7J0TI08P4J 6CYA","F5LXX1ZZ5PNORYNQGLHZMSP34","ZZZZZZZZZZZZZZZZZZZZZZZZZ"];for(const n of r){let r=null;try{t.oD.fromString(n)}catch(t){r=t}e(null!==r)}})),it("has symmetric converters from/to various values",(function(){const s=[t.oD.fromFields(0,0,0,0),t.oD.fromFields(r,0,0,0),t.oD.fromFields(0,n,0,0),t.oD.fromFields(0,0,n,0),t.oD.fromFields(0,0,0,o),t.oD.fromFields(r,n,n,o)],i=new t._R;for(let t=0;t<1e3;t++)s.push(i.generate());for(const r of s){e(t.oD.fromString(r.toString()).equals(r)),e(t.oD.fromHex(r.toHex()).equals(r)),e(t.oD.fromFields(r.timestamp,r.counterHi,r.counterLo,r.entropy).equals(r));const n=t.oD.ofInner(r.bytes);e(n.equals(r)),e(n.bytes.buffer==r.bytes.buffer);const o=t.oD.fromBytes(r.bytes);e(o.equals(r)),e(o.bytes.buffer!=r.bytes.buffer);const s=t.oD.fromBytes(Uint8Array.from(r.toString(),(t=>t.charCodeAt(0))));e(s.equals(r)),e(s.bytes.buffer!=r.bytes.buffer);const i=r.toArrayBuffer(),a=t.oD.fromArrayBuffer(i);e(a.equals(r)),e(i!=r.bytes.buffer),e(i!=a.bytes.buffer)}})),it("supports comparison methods",(function(){const r=[t.oD.fromFields(0,0,0,0),t.oD.fromFields(0,0,0,1),t.oD.fromFields(0,0,0,o),t.oD.fromFields(0,0,1,0),t.oD.fromFields(0,0,n,0),t.oD.fromFields(0,1,0,0),t.oD.fromFields(0,n,0,0),t.oD.fromFields(1,0,0,0),t.oD.fromFields(2,0,0,0)],s=new t._R;for(let t=0;t<1e3;t++)r.push(s.generate());let i=r.shift();for(const t of r){e(!t.equals(i)),e(!i.equals(t)),e(t.compareTo(i)>0),e(i.compareTo(t)<0);const r=t.clone();e(t!=r),e(r!=t),e(t.equals(r)),e(r.equals(t)),e(0===t.compareTo(r)),e(0===r.compareTo(t)),e(t.bytes.buffer!=r.bytes.buffer),e(r.bytes.buffer!=t.bytes.buffer),i=t}})),it("serializes an object using the canonical string representation",(function(){const r=new t._R;for(let t=0;t<1e3;t++){const t=r.generate();e(JSON.stringify(t)===`"${t}"`)}}))}))})(),(()=>{var t=r(850);const e=(t,e="")=>{if(!t)throw new Error("Assertion failed"+(e?": "+e:""))};globalThis.SCRU128_DENY_WEAK_RNG=!0,describe("scru128()",(function(){it("returns a Scru128Id object",(function(){const r=(0,t.rI)();e(r instanceof t.oD)}))})),describe("scru128String()",(function(){const r=[];for(let e=0;e<1e5;e++)r[e]=(0,t.Er)();it("generates 25-digit canonical string",(function(){const t=/^[0-9A-Z]{25}$/;e(r.every((e=>"string"==typeof e&&t.test(e))))})),it("generates 100k identifiers without collision",(function(){e(new Set(r).size===r.length)})),it("generates sortable string representation by creation time",(function(){for(let t=1;t<r.length;t++)e(r[t-1]<r[t])})),it("encodes up-to-date timestamp",(function(){const r=new t._R;for(let t=0;t<1e4;t++){const t=Date.now(),n=r.generate().timestamp;e(Math.abs(t-n)<16)}})),it("encodes unique sortable tuple of timestamp and counters",(function(){let n=t.oD.fromString(r[0]);for(let o=1;o<r.length;o++){const s=t.oD.fromString(r[o]);e(n.timestamp<s.timestamp||n.timestamp===s.timestamp&&n.counterHi<s.counterHi||n.timestamp===s.timestamp&&n.counterHi===s.counterHi&&n.counterLo<s.counterLo),n=s}})),it("generates no IDs sharing same timestamp and counters by multiple async functions",(async function(){const r=[],n=[];for(let e=0;e<4e4;e++)n.push((async()=>r.push((0,t.rI)()))());await Promise.all(n);const o=new Set(r.map((t=>`${t.timestamp}-${t.counterHi}-${t.counterLo}`)));e(4e4===o.size)}))}))})()})();